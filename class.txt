Python is an object oriented programming language.
Almost everything in Python is an object, with its properties and methods.
Main Concepts of Object-Oriented Programming (OOPs) :
*Class
*Objects
*Polymorphism
*Encapsulation
*Inheritance
*Data Abstraction
#################################################################
1)what is class?
2)what is object?
3)what is method?
4)what is self parameter?
##############################################################################################################
Class :
    A class is a collection of objects. A class contains the blueprints or the prototype from which the objects are being created.
    It is a logical entity that contains some attributes and methods.

Create a Class:- To create a class, use the keyword class.

class MyClass:
  x = 5
###############################################################################################
Object
        The object is an entity that has state and behavior. It may be any real-world object like the mouse, keyboard, chair, table, pen, etc.

p1 = MyClass()
print(p1.x)
####################################################################################################
method:
        When we define a function inside the class it is calld 'Method'
E.g:
class School:
     print('S.M.M.S.School')
     def student(self):         #method
        print('student name')
obj=School()
obj.student()
######################################################################################
The __init__() Function: #Constructor
        In Python the "__init__()" method is called the constructor and is always called when an object is created.
class Person:
  def __init__(self):
    print('Constructor')

p1 = Person()
################################################################

The self Parameter:
                The self parameter is a reference to the current instance of the class, and is used to access variables that belongs to the class.

class Person:
  def __init__(self, name, age):
    self.name = name
    self.age = age

  def myfunc(abc):
    print("Hello my name is " , self.name)

p1 = Person("John", 36)
p1.myfunc()

Modify Object Properties:
You can modify properties on objects like this
Example:
Set the age of p1 to 40:

p1.age = 40

Delete Object Properties:-
You can delete properties on objects by using the del keyword:

Example
Delete the age property from the p1 object:

del p1.age

Delete Objects:-
You can delete objects by using the del keyword:

Example:
Delete the p1 object:

del p1





